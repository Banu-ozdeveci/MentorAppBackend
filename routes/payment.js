const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");
const Stripe = require("stripe");
const { v4: uuidv4 } = require("uuid");
const router = express.Router();
router.use(express.json());
router.use(bodyParser.json());

const stripe = new Stripe(
  "sk_test_51IHYrjDeieSMuwzYSlkRkbKxENz3YhLzHRzm3y248nvSes9sMdYsAIXNf2eRVerSYOfoFLTA3WOW13OfW6xSectl00pG1t79Ro",
  {
    apiVersion: "2020-08-27",
  }
);

router.use(cors());

// interface Product {
//   Description: number;
//   Amount: number;
// }

router.post("/", async (req, res) => {
  const { email, product, authToken } = req.body;
  const { token } = authToken;
  const { card } = token;

  console.log("card", card);

  console.log(
    "============================================== payment initiate ======================="
  );

  //const userProduct = product as Product;

  // unique ID generated by client
  const idempotencyKey = uuidv4();

  try {
    const customer = await stripe.customers.create({
      email: email,
      source: token.id,
    });

    console.log("Customer Created.....");
    console.log(customer);

    const response = await stripe.charges.create(
      {
        amount: product.Price * 100,
        currency: "USD",
        customer: customer.id,
        receipt_email: email,
        // description: userProduct.description,
        shipping: {
          name: card.name,
          address: {
            line1: "Istanbul",
            country: card.address_country,
          },
        },
      },
      { idempotencyKey: idempotencyKey }
    );

    console.log("charge response");
    console.log(response);

    res.json(response);
  } catch (err) {
    console.log(
      "=========================================== error =========================="
    );
    console.log(err);
    res.json(err);
  }
});

module.exports = router;
// app.use("/", (req, res, next) => {
//   res.json("Thank you...");
// });
